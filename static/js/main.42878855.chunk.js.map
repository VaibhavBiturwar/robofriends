{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/Searchbox.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","key","Scroll","style","overflow","height","border","children","Searchbox","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","searchfield","target","value","state","console","log","fetch","response","json","users","filteredRobots","this","filter","newRobots","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCUCQ,G,MAdF,SAACC,GACV,OAEI,yBAAKC,UAAU,+CACX,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,uBACpB,6BACI,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,WCYXC,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAEf,OACI,6BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACT,OAAS,kBAAC,EAAD,CACJC,IAAKD,EACLP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,aCC3BO,EAXF,SAACb,GAEV,OACI,yBAAKc,MAAO,CAACC,SAAS,SAAUC,OAAO,QAAUC,OAAO,sBACnDjB,EAAMkB,WCWJC,EAhBC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAEd,OACI,yBAAKnB,UAAU,OACX,2BACAA,UAAU,mCACVoB,KAAK,SACLC,YAAY,YACZC,SAAUH,MC8CPI,E,kDAlDX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfI,QAAQC,IAAI,WACZC,MAAM,8CACLzC,MAAK,SAAA0C,GAAQ,OAAIA,EAASC,UAC1B3C,MAAK,SAAA4C,GAAK,OAAE,EAAKV,SAAS,CAACnB,OAAQ6B,S,oBAWxC,WAAS,IAAD,OACEC,EAAiBC,KAAKR,MAAMvB,OAAOgC,QAAO,SAAAC,GAC5C,OAAOA,EAAUpC,KAAKqC,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,kBAGxE,OAAIH,KAAKR,MAAMvB,OAAOoC,OAMd,yBAAM3C,UAAU,MACZ,2CACA,kBAAC,EAAD,CAAWmB,aAAcmB,KAAKd,iBAC9B,kBAAC,EAAD,KACA,kBAAC,EAAD,CAAUjB,OAAQ8B,OAT1BN,QAAQC,IAAI,YACL,4C,GA/BDY,IAAMC,W,MCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1B7D,K","file":"static/js/main.42878855.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) =>{\r\n    return(\r\n        // <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n        <div className=\"tc cardbg dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n            <img alt=\"Robot\" src={`https://robohash.org/${props.id}?200x200?set=set4`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    \r\n    return(\r\n        <div>\r\n            {\r\n            robots.map((user,i) => {\r\n                    return  (<Card \r\n                         key={i} \r\n                         id={robots[i].id} \r\n                         name={robots[i].name}\r\n                         email={robots[i].email} \r\n                         />);\r\n                     })\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll=(props)=>{\r\n\r\n    return(\r\n        <div style={{overflow:'scroll', height:\"500px\" , border:\"10px dashed black\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Searchbox=({searchChange})=>{\r\n\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\" \r\n            type='search' \r\n            placeholder='Type Here'\r\n            onChange={searchChange}\r\n            ></input>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport Searchbox from '../components/Searchbox';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Mounted\");\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>  response.json())\r\n        .then(users=>this.setState({robots: users}) );\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n        // console.log(this.state.searchfield);\r\n        \r\n        // console.log(filteredRobots);\r\n        \r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(newRobots => {\r\n            return newRobots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        });\r\n\r\n        if(!this.state.robots.length){\r\n            console.log(\"Length 0\")\r\n            return <h2>Loading</h2>\r\n        }\r\n        else{\r\n            return(\r\n                <div  className=\"tc\">\r\n                    <h2>RoboFriends</h2>   \r\n                    <Searchbox searchChange={this.onSearchChange} />   \r\n                    <Scroll>    \r\n                    <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}